{"ast":null,"code":"'use strict';\n\nvar SymbolNode = require('mr-parser').nodeTypes.SymbolNode;\nvar functionProxy = function (node) {\n  return '$$mathCodegen.functionProxy(' + this.next(new SymbolNode(node.name)) + ', \"' + node.name + '\")';\n};\nmodule.exports = function (node) {\n  var self = this;\n  // wrap in a helper function to detect the type of symbol it must be a function\n  // NOTE: if successful the wrapper returns the function itself\n  // NOTE: node.name should be a symbol so that it's correctly represented as a string in SymbolNode\n  var method = functionProxy.call(this, node);\n  var args = [];\n  this.rawify(this.options.rawCallExpressionElements, function () {\n    args = node.args.map(function (arg) {\n      return self.next(arg);\n    });\n  });\n  return method + '(' + args.join(', ') + ')';\n};\nmodule.exports.functionProxy = functionProxy;","map":{"version":3,"names":["SymbolNode","require","nodeTypes","functionProxy","node","next","name","module","exports","self","method","call","args","rawify","options","rawCallExpressionElements","map","arg","join"],"sources":["C:/Users/camilo/Desktop/aprox/node_modules/math-codegen/lib/node/FunctionNode.js"],"sourcesContent":["'use strict'\nvar SymbolNode = require('mr-parser').nodeTypes.SymbolNode\n\nvar functionProxy = function (node) {\n  return '$$mathCodegen.functionProxy(' + this.next(new SymbolNode(node.name)) + ', \"' + node.name + '\")'\n}\n\nmodule.exports = function (node) {\n  var self = this\n  // wrap in a helper function to detect the type of symbol it must be a function\n  // NOTE: if successful the wrapper returns the function itself\n  // NOTE: node.name should be a symbol so that it's correctly represented as a string in SymbolNode\n  var method = functionProxy.call(this, node)\n  var args = []\n  this.rawify(this.options.rawCallExpressionElements, function () {\n    args = node.args.map(function (arg) {\n      return self.next(arg)\n    })\n  })\n  return method + '(' + args.join(', ') + ')'\n}\n\nmodule.exports.functionProxy = functionProxy\n"],"mappings":"AAAA,YAAY;;AACZ,IAAIA,UAAU,GAAGC,OAAO,CAAC,WAAW,CAAC,CAACC,SAAS,CAACF,UAAU;AAE1D,IAAIG,aAAa,GAAG,SAAAA,CAAUC,IAAI,EAAE;EAClC,OAAO,8BAA8B,GAAG,IAAI,CAACC,IAAI,CAAC,IAAIL,UAAU,CAACI,IAAI,CAACE,IAAI,CAAC,CAAC,GAAG,KAAK,GAAGF,IAAI,CAACE,IAAI,GAAG,IAAI;AACzG,CAAC;AAEDC,MAAM,CAACC,OAAO,GAAG,UAAUJ,IAAI,EAAE;EAC/B,IAAIK,IAAI,GAAG,IAAI;EACf;EACA;EACA;EACA,IAAIC,MAAM,GAAGP,aAAa,CAACQ,IAAI,CAAC,IAAI,EAAEP,IAAI,CAAC;EAC3C,IAAIQ,IAAI,GAAG,EAAE;EACb,IAAI,CAACC,MAAM,CAAC,IAAI,CAACC,OAAO,CAACC,yBAAyB,EAAE,YAAY;IAC9DH,IAAI,GAAGR,IAAI,CAACQ,IAAI,CAACI,GAAG,CAAC,UAAUC,GAAG,EAAE;MAClC,OAAOR,IAAI,CAACJ,IAAI,CAACY,GAAG,CAAC;IACvB,CAAC,CAAC;EACJ,CAAC,CAAC;EACF,OAAOP,MAAM,GAAG,GAAG,GAAGE,IAAI,CAACM,IAAI,CAAC,IAAI,CAAC,GAAG,GAAG;AAC7C,CAAC;AAEDX,MAAM,CAACC,OAAO,CAACL,aAAa,GAAGA,aAAa"},"metadata":{},"sourceType":"script","externalDependencies":[]}