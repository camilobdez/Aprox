{"ast":null,"code":"'use strict';\n\nvar CodeGenerator = require('math-codegen');\nvar math = require('./adapter')();\nfunction processScope(scope) {\n  Object.keys(scope).forEach(function (k) {\n    var value = scope[k];\n    scope[k] = math.factory(value);\n  });\n}\nmodule.exports = function (expression) {\n  return new CodeGenerator().setDefs({\n    $$processScope: processScope\n  }).parse(expression).compile(math);\n};\nmodule.exports.math = math;","map":{"version":3,"names":["CodeGenerator","require","math","processScope","scope","Object","keys","forEach","k","value","factory","module","exports","expression","setDefs","$$processScope","parse","compile"],"sources":["C:/Users/camilo/Desktop/aprox/node_modules/built-in-math-eval/lib/eval.js"],"sourcesContent":["'use strict'\n\nvar CodeGenerator = require('math-codegen')\nvar math = require('./adapter')()\n\nfunction processScope (scope) {\n  Object.keys(scope).forEach(function (k) {\n    var value = scope[k]\n    scope[k] = math.factory(value)\n  })\n}\n\nmodule.exports = function (expression) {\n  return new CodeGenerator()\n    .setDefs({\n      $$processScope: processScope\n    })\n    .parse(expression)\n    .compile(math)\n}\n\nmodule.exports.math = math\n"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,aAAa,GAAGC,OAAO,CAAC,cAAc,CAAC;AAC3C,IAAIC,IAAI,GAAGD,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC;AAEjC,SAASE,YAAYA,CAAEC,KAAK,EAAE;EAC5BC,MAAM,CAACC,IAAI,CAACF,KAAK,CAAC,CAACG,OAAO,CAAC,UAAUC,CAAC,EAAE;IACtC,IAAIC,KAAK,GAAGL,KAAK,CAACI,CAAC,CAAC;IACpBJ,KAAK,CAACI,CAAC,CAAC,GAAGN,IAAI,CAACQ,OAAO,CAACD,KAAK,CAAC;EAChC,CAAC,CAAC;AACJ;AAEAE,MAAM,CAACC,OAAO,GAAG,UAAUC,UAAU,EAAE;EACrC,OAAO,IAAIb,aAAa,CAAC,CAAC,CACvBc,OAAO,CAAC;IACPC,cAAc,EAAEZ;EAClB,CAAC,CAAC,CACDa,KAAK,CAACH,UAAU,CAAC,CACjBI,OAAO,CAACf,IAAI,CAAC;AAClB,CAAC;AAEDS,MAAM,CAACC,OAAO,CAACV,IAAI,GAAGA,IAAI"},"metadata":{},"sourceType":"script","externalDependencies":[]}