{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.interval = exports.builtIn = void 0;\nconst built_in_math_eval_1 = __importDefault(require(\"built-in-math-eval\"));\nconst interval_arithmetic_eval_1 = __importDefault(require(\"interval-arithmetic-eval\"));\nconst samplers = {\n  interval: interval_arithmetic_eval_1.default,\n  builtIn: built_in_math_eval_1.default\n};\n// getMathJS returns checks if mathjs is loaded.\nfunction getMathJS() {\n  if (typeof global === 'object' && 'math' in global) {\n    // @ts-ignore\n    return global.math;\n  }\n  if (typeof window === 'object' && 'math' in window) {\n    // @ts-ignore\n    return window.math;\n  }\n  return null;\n}\nconst mathJS = getMathJS();\nif (mathJS) {\n  // override the built-in module with mathjs's compile\n  samplers.builtIn = mathJS.compile;\n}\nfunction generateEvaluator(samplerName) {\n  function doCompile(expression) {\n    // compiles does the following\n    //\n    // when expression === string\n    //\n    //     gen = new require('math-codegen')\n    //     return gen.parse(expression).compile(Interval|BultInMath)\n    //\n    //     which is an object with the form\n    //\n    //     {\n    //       eval: function (scope) {\n    //         // math-codegen magic\n    //       }\n    //     }\n    //\n    // when expression === function\n    //\n    //    {\n    //      eval: expression\n    //    }\n    //\n    // otherwise throw an error\n    if (typeof expression === 'string') {\n      const compiled = samplers[samplerName](expression);\n      if (mathJS && samplerName === 'builtIn') {\n        // if mathjs is included use its evaluate method instead\n        return {\n          eval: compiled.evaluate || compiled.eval\n        };\n      }\n      return compiled;\n    } else if (typeof expression === 'function') {\n      return {\n        eval: expression\n      };\n    } else {\n      throw Error('expression must be a string or a function');\n    }\n  }\n  function compileIfPossible(meta, property) {\n    // compile the function using interval arithmetic, cache the result\n    // so that multiple calls with the same argument don't trigger the\n    // kinda expensive compilation process\n    const expression = meta[property];\n    const hiddenProperty = samplerName + '_Expression_' + property;\n    const hiddenCompiled = samplerName + '_Compiled_' + property;\n    if (expression !== meta[hiddenProperty]) {\n      meta[hiddenProperty] = expression;\n      meta[hiddenCompiled] = doCompile(expression);\n    }\n  }\n  function getCompiledExpression(meta, property) {\n    return meta[samplerName + '_Compiled_' + property];\n  }\n  /**\n   * Evaluates meta[property] with `variables`\n   *\n   * - Compiles meta[property] if it wasn't compiled already (also with cache\n   *   check)\n   * - Evaluates the resulting function with the merge of meta.scope and\n   *   `variables`\n   *\n   * @param meta\n   * @param property\n   * @param variables\n   * @returns The builtIn evaluator returns a number, the interval evaluator an array\n   */\n  function evaluate(meta, property, variables) {\n    // e.g.\n    //\n    //  meta: {\n    //    fn: 'x + 3',\n    //    scope: { y: 3 }\n    //  }\n    //  property: 'fn'\n    //  variables:  { x: 3 }\n    //\n    compileIfPossible(meta, property);\n    return getCompiledExpression(meta, property).eval(Object.assign({}, meta.scope || {}, variables));\n  }\n  return evaluate;\n}\nconst builtIn = generateEvaluator('builtIn');\nexports.builtIn = builtIn;\nconst interval = generateEvaluator('interval');\nexports.interval = interval;","map":{"version":3,"names":["built_in_math_eval_1","__importDefault","require","interval_arithmetic_eval_1","samplers","interval","default","builtIn","getMathJS","global","math","window","mathJS","compile","generateEvaluator","samplerName","doCompile","expression","compiled","eval","evaluate","Error","compileIfPossible","meta","property","hiddenProperty","hiddenCompiled","getCompiledExpression","variables","Object","assign","scope","exports"],"sources":["../../src/helpers/eval.ts"],"sourcesContent":[null],"mappings":";;;;;;;;;;;AAAA,MAAAA,oBAAA,GAAAC,eAAA,CAAAC,OAAA;AACA,MAAAC,0BAAA,GAAAF,eAAA,CAAAC,OAAA;AAEA,MAAME,QAAQ,GAAG;EACfC,QAAQ,EAAEF,0BAAA,CAAAG,OAAsB;EAChCC,OAAO,EAAEP,oBAAA,CAAAM;CACV;AAED;AACA,SAASE,SAASA,CAAA;EAChB,IAAI,OAAOC,MAAM,KAAK,QAAQ,IAAI,MAAM,IAAIA,MAAM,EAAE;IAClD;IACA,OAAOA,MAAM,CAACC,IAAW;;EAE3B,IAAI,OAAOC,MAAM,KAAK,QAAQ,IAAI,MAAM,IAAIA,MAAM,EAAE;IAClD;IACA,OAAOA,MAAM,CAACD,IAAI;;EAEpB,OAAO,IAAI;AACb;AAEA,MAAME,MAAM,GAAGJ,SAAS,EAAE;AAC1B,IAAII,MAAM,EAAE;EACV;EACAR,QAAQ,CAACG,OAAO,GAAGK,MAAM,CAACC,OAAO;;AAGnC,SAASC,iBAAiBA,CAACC,WAAmC;EAC5D,SAASC,SAASA,CAACC,UAAkD;IACnE;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,OAAOA,UAAU,KAAK,QAAQ,EAAE;MAClC,MAAMC,QAAQ,GAAGd,QAAQ,CAACW,WAAW,CAAC,CAACE,UAAU,CAAC;MAClD,IAAIL,MAAM,IAAIG,WAAW,KAAK,SAAS,EAAE;QACvC;QACA,OAAO;UAAEI,IAAI,EAAED,QAAQ,CAACE,QAAQ,IAAIF,QAAQ,CAACC;QAAI,CAAE;;MAErD,OAAOD,QAAQ;KAChB,MAAM,IAAI,OAAOD,UAAU,KAAK,UAAU,EAAE;MAC3C,OAAO;QAAEE,IAAI,EAAEF;MAAU,CAAE;KAC5B,MAAM;MACL,MAAMI,KAAK,CAAC,2CAA2C,CAAC;;EAE5D;EAEA,SAASC,iBAAiBA,CAACC,IAAS,EAAEC,QAAgB;IACpD;IACA;IACA;IACA,MAAMP,UAAU,GAAGM,IAAI,CAACC,QAAQ,CAAC;IACjC,MAAMC,cAAc,GAAGV,WAAW,GAAG,cAAc,GAAGS,QAAQ;IAC9D,MAAME,cAAc,GAAGX,WAAW,GAAG,YAAY,GAAGS,QAAQ;IAC5D,IAAIP,UAAU,KAAKM,IAAI,CAACE,cAAc,CAAC,EAAE;MACvCF,IAAI,CAACE,cAAc,CAAC,GAAGR,UAAU;MACjCM,IAAI,CAACG,cAAc,CAAC,GAAGV,SAAS,CAACC,UAAU,CAAC;;EAEhD;EAEA,SAASU,qBAAqBA,CAACJ,IAAS,EAAEC,QAAgB;IACxD,OAAOD,IAAI,CAACR,WAAW,GAAG,YAAY,GAAGS,QAAQ,CAAC;EACpD;EAEA;;;;;;;;;;;;;EAaA,SAASJ,QAAQA,CAACG,IAAS,EAAEC,QAAgB,EAAEI,SAAiB;IAC9D;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACAN,iBAAiB,CAACC,IAAI,EAAEC,QAAQ,CAAC;IAEjC,OAAOG,qBAAqB,CAACJ,IAAI,EAAEC,QAAQ,CAAC,CAACL,IAAI,CAACU,MAAM,CAACC,MAAM,CAAC,EAAE,EAAEP,IAAI,CAACQ,KAAK,IAAI,EAAE,EAAEH,SAAS,CAAC,CAAC;EACnG;EAEA,OAAOR,QAAQ;AACjB;AAEA,MAAMb,OAAO,GAAGO,iBAAiB,CAAC,SAAS,CAAC;AAGnCkB,OAAA,CAAAzB,OAAA,GAAAA,OAAA;AAFT,MAAMF,QAAQ,GAAGS,iBAAiB,CAAC,UAAU,CAAC;AAE5BkB,OAAA,CAAA3B,QAAA,GAAAA,QAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}