{"ast":null,"code":"import * as utils from './utils';\n// boost/numeric/interval_lib/compare/certain package on boost\n/**\n * @mixin relational\n */\n/**\n * Checks if the intervals `x`, `y` are equal, they're equal when\n * `x.lo === y.lo` and `x.hi === y.hi`, a corner case handled is when `x` and\n * `y` are both empty intervals\n *\n * @example\n * ```typescript\n * Interval.equal(\n *   Interval(2, 3),\n *   Interval(2, 3)\n * ) // true\n * ```\n *\n * @example\n * ```typescript\n * Interval.equal(\n *   Interval.EMPTY,\n *   Interval.EMPTY\n * ) // true\n * ```\n *\n * @param {Interval} x\n * @param {Interval} y\n * @returns {boolean}\n */\nexport function equal(x, y) {\n  if (utils.isEmpty(x)) {\n    return utils.isEmpty(y);\n  }\n  return !utils.isEmpty(y) && x.lo === y.lo && x.hi === y.hi;\n}\n// <debug>\nconst EPS = 1e-7;\nfunction assert(a, message) {\n  /* istanbul ignore next */\n  // eslint-disable-next-line @typescript-eslint/strict-boolean-expressions\n  if (!a) {\n    // eslint-disable-next-line @typescript-eslint/strict-boolean-expressions\n    throw new Error(message || 'assertion failed');\n  }\n}\nfunction assertEps(a, b) {\n  if (!isFinite(a)) {\n    // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n    return assert(a === b, `[Infinity] expected ${a} to be ${b}`);\n  }\n  // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n  assert(Math.abs(a - b) < EPS, `expected ${a} to be close to ${b}`);\n}\nexport function almostEqual(x, y) {\n  x = Array.isArray(x) ? x : x.toArray();\n  y = Array.isArray(y) ? y : y.toArray();\n  assertEps(x[0], y[0]);\n  assertEps(x[1], y[1]);\n}\nexport function assertIncludes(x, y) {\n  // checks that `y` is included in `x` with the bounds close to `x`\n  almostEqual(x, y);\n  x = Array.isArray(x) ? x : x.toArray();\n  y = Array.isArray(y) ? y : y.toArray();\n  assert(x[0] <= y[0], `${x[0]} should be less/equal than ${y[0]}`);\n  assert(y[1] <= x[1], `${y[1]} should be less/equal than ${x[1]}`);\n}\n// </debug>\n/**\n * Checks if the intervals `x`, `y` are not equal i.e. when the intervals don't\n * share any value\n *\n * @example\n * ```typescript\n * Interval.notEqual(\n *   Interval(2, 3),\n *   Interval(4, 5)\n * ) // true\n * ```\n *\n * @example\n * ```typescript\n * Interval.notEqual(\n *   Interval(2, 3),\n *   Interval(3, 5)\n * ) // false\n * ```\n *\n * @example\n * ```typescript\n * Interval.notEqual(\n *   Interval(2, 4),\n *   Interval(3, 5)\n * ) // false\n * ```\n *\n * @param {Interval} x\n * @param {Interval} y\n * @returns {boolean}\n */\nexport function notEqual(x, y) {\n  if (utils.isEmpty(x)) {\n    return !utils.isEmpty(y);\n  }\n  return utils.isEmpty(y) || x.hi < y.lo || x.lo > y.hi;\n}\n/**\n * Checks if the interval `x` is less than `y` i.e. if all the values of `x`\n * are lower than the left endpoint of `y`\n *\n * @example\n * ```typescript\n * Interval.lessThan(\n *   Interval(2, 3),\n *   Interval(4, 5)\n * ) // true\n * ```\n *\n * @example\n * ```typescript\n * Interval.lessThan(\n *   Interval(4, 5),\n *   Interval(2, 3)\n * ) // false\n * ```\n *\n * @param {Interval} x\n * @param {Interval} y\n * @return {boolean}\n */\nexport function lessThan(x, y) {\n  if (utils.isEmpty(x) || utils.isEmpty(y)) {\n    return false;\n  }\n  return x.hi < y.lo;\n}\n/**\n * Alias for {@link lessThan}\n * @function\n */\nexport const lt = lessThan;\n/**\n * Checks if the interval `x` is greater than `y` i.e. if all the values of `x`\n * are greater than the right endpoint of `y`\n *\n * @example\n * ```typescript\n * Interval.greaterThan(\n *   Interval(2, 3),\n *   Interval(4, 5)\n * ) // false\n * ```\n *\n * @example\n * ```typescript\n * Interval.greaterThan(\n *   Interval(4, 5),\n *   Interval(2, 3)\n * ) // true\n * ```\n *\n * @param {Interval} x\n * @param {Interval} y\n * @return {boolean}\n */\nexport function greaterThan(x, y) {\n  if (utils.isEmpty(x) || utils.isEmpty(y)) {\n    return false;\n  }\n  return x.lo > y.hi;\n}\n/**\n * Alias for {@link greaterThan}\n * @function\n */\nexport const gt = greaterThan;\n/**\n * Checks if the interval `x` is less or equal than `y` i.e.\n * if all the values of `x` are lower or equal to the left endpoint of `y`\n *\n * @example\n * ```typescript\n * Interval.lessEqualThan(\n *   Interval(2, 3),\n *   Interval(3, 5)\n * ) // true\n * ```\n *\n * @param {Interval} x\n * @param {Interval} y\n * @return {boolean}\n */\nexport function lessEqualThan(x, y) {\n  if (utils.isEmpty(x) || utils.isEmpty(y)) {\n    return false;\n  }\n  return x.hi <= y.lo;\n}\n/**\n * Alias for {@link lessEqualThan}\n * @function\n */\nexport const leq = lessEqualThan;\n/**\n * Checks if the interval `x` is greater or equal than `y` i.e.\n * if all the values of `x` are greater or equal to the right endpoint of `y`\n * @param {Interval} x\n * @param {Interval} y\n * @return {boolean}\n */\nexport function greaterEqualThan(x, y) {\n  if (utils.isEmpty(x) || utils.isEmpty(y)) {\n    return false;\n  }\n  return x.lo >= y.hi;\n}\n/**\n * Alias for {@link greaterEqualThan}\n * @function\n */\nexport const geq = greaterEqualThan;","map":{"version":3,"names":["utils","equal","x","y","isEmpty","lo","hi","EPS","assert","a","message","Error","assertEps","b","isFinite","Math","abs","almostEqual","Array","isArray","toArray","assertIncludes","notEqual","lessThan","lt","greaterThan","gt","lessEqualThan","leq","greaterEqualThan","geq"],"sources":["../../src/operations/relational.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}