{"ast":null,"code":"'use strict';\n\nmodule.exports = function () {\n  var math = Object.create(Math);\n  math.factory = function (a) {\n    if (typeof a !== 'number') {\n      throw new TypeError('built-in math factory only accepts numbers');\n    }\n    return Number(a);\n  };\n  math.add = function (a, b) {\n    return a + b;\n  };\n  math.sub = function (a, b) {\n    return a - b;\n  };\n  math.mul = function (a, b) {\n    return a * b;\n  };\n  math.div = function (a, b) {\n    return a / b;\n  };\n  math.mod = function (a, b) {\n    return a % b;\n  };\n  math.factorial = function (a) {\n    var res = 1;\n    for (var i = 2; i <= a; i += 1) {\n      res *= i;\n    }\n    return res;\n  };\n\n  // taken from https://github.com/josdejong/mathjs/blob/master/lib/function/arithmetic/nthRoot.js\n  math.nthRoot = function (a, root) {\n    var inv = root < 0;\n    if (inv) {\n      root = -root;\n    }\n    if (root === 0) {\n      throw new Error('Root must be non-zero');\n    }\n    if (a < 0 && Math.abs(root) % 2 !== 1) {\n      throw new Error('Root must be odd when a is negative.');\n    }\n\n    // edge cases zero and infinity\n    if (a === 0) {\n      return 0;\n    }\n    if (!isFinite(a)) {\n      return inv ? 0 : a;\n    }\n    var x = Math.pow(Math.abs(a), 1 / root);\n    // If a < 0, we require that root is an odd integer,\n    // so (-1) ^ (1/root) = -1\n    x = a < 0 ? -x : x;\n    return inv ? 1 / x : x;\n  };\n\n  // logical\n  math.logicalOR = function (a, b) {\n    return a || b;\n  };\n  math.logicalXOR = function (a, b) {\n    /* eslint-disable */\n    return a != b;\n    /* eslint-enable*/\n  };\n\n  math.logicalAND = function (a, b) {\n    return a && b;\n  };\n\n  // bitwise\n  math.bitwiseOR = function (a, b) {\n    /* eslint-disable */\n    return a | b;\n    /* eslint-enable*/\n  };\n\n  math.bitwiseXOR = function (a, b) {\n    /* eslint-disable */\n    return a ^ b;\n    /* eslint-enable*/\n  };\n\n  math.bitwiseAND = function (a, b) {\n    /* eslint-disable */\n    return a & b;\n    /* eslint-enable*/\n  };\n\n  // relational\n  math.lessThan = function (a, b) {\n    return a < b;\n  };\n  math.lessEqualThan = function (a, b) {\n    return a <= b;\n  };\n  math.greaterThan = function (a, b) {\n    return a > b;\n  };\n  math.greaterEqualThan = function (a, b) {\n    return a >= b;\n  };\n  math.equal = function (a, b) {\n    /* eslint-disable */\n    return a == b;\n    /* eslint-enable*/\n  };\n\n  math.strictlyEqual = function (a, b) {\n    return a === b;\n  };\n  math.notEqual = function (a, b) {\n    /* eslint-disable */\n    return a != b;\n    /* eslint-enable*/\n  };\n\n  math.strictlyNotEqual = function (a, b) {\n    return a !== b;\n  };\n\n  // shift\n  math.shiftRight = function (a, b) {\n    return a >> b;\n  };\n  math.shiftLeft = function (a, b) {\n    return a << b;\n  };\n  math.unsignedRightShift = function (a, b) {\n    return a >>> b;\n  };\n\n  // unary\n  math.negative = function (a) {\n    return -a;\n  };\n  math.positive = function (a) {\n    return a;\n  };\n  return math;\n};","map":{"version":3,"names":["module","exports","math","Object","create","Math","factory","a","TypeError","Number","add","b","sub","mul","div","mod","factorial","res","i","nthRoot","root","inv","Error","abs","isFinite","x","pow","logicalOR","logicalXOR","logicalAND","bitwiseOR","bitwiseXOR","bitwiseAND","lessThan","lessEqualThan","greaterThan","greaterEqualThan","equal","strictlyEqual","notEqual","strictlyNotEqual","shiftRight","shiftLeft","unsignedRightShift","negative","positive"],"sources":["C:/Users/camilo/Desktop/aprox/node_modules/built-in-math-eval/lib/adapter.js"],"sourcesContent":["'use strict'\nmodule.exports = function () {\n  var math = Object.create(Math)\n\n  math.factory = function (a) {\n    if (typeof a !== 'number') {\n      throw new TypeError('built-in math factory only accepts numbers')\n    }\n    return Number(a)\n  }\n\n  math.add = function (a, b) {\n    return a + b\n  }\n  math.sub = function (a, b) {\n    return a - b\n  }\n  math.mul = function (a, b) {\n    return a * b\n  }\n  math.div = function (a, b) {\n    return a / b\n  }\n  math.mod = function (a, b) {\n    return a % b\n  }\n  math.factorial = function (a) {\n    var res = 1\n    for (var i = 2; i <= a; i += 1) {\n      res *= i\n    }\n    return res\n  }\n\n  // taken from https://github.com/josdejong/mathjs/blob/master/lib/function/arithmetic/nthRoot.js\n  math.nthRoot = function (a, root) {\n    var inv = root < 0\n    if (inv) {\n      root = -root\n    }\n\n    if (root === 0) {\n      throw new Error('Root must be non-zero')\n    }\n    if (a < 0 && (Math.abs(root) % 2 !== 1)) {\n      throw new Error('Root must be odd when a is negative.')\n    }\n\n    // edge cases zero and infinity\n    if (a === 0) {\n      return 0\n    }\n    if (!isFinite(a)) {\n      return inv ? 0 : a\n    }\n\n    var x = Math.pow(Math.abs(a), 1 / root)\n    // If a < 0, we require that root is an odd integer,\n    // so (-1) ^ (1/root) = -1\n    x = a < 0 ? -x : x\n    return inv ? 1 / x : x\n  }\n\n  // logical\n  math.logicalOR = function (a, b) {\n    return a || b\n  }\n  math.logicalXOR = function (a, b) {\n    /* eslint-disable */\n    return a != b\n    /* eslint-enable*/\n  }\n  math.logicalAND = function (a, b) {\n    return a && b\n  }\n\n  // bitwise\n  math.bitwiseOR = function (a, b) {\n    /* eslint-disable */\n    return a | b\n    /* eslint-enable*/\n  }\n  math.bitwiseXOR = function (a, b) {\n    /* eslint-disable */\n    return a ^ b\n    /* eslint-enable*/\n  }\n  math.bitwiseAND = function (a, b) {\n    /* eslint-disable */\n    return a & b\n    /* eslint-enable*/\n  }\n\n  // relational\n  math.lessThan = function (a, b) {\n    return a < b\n  }\n  math.lessEqualThan = function (a, b) {\n    return a <= b\n  }\n  math.greaterThan = function (a, b) {\n    return a > b\n  }\n  math.greaterEqualThan = function (a, b) {\n    return a >= b\n  }\n  math.equal = function (a, b) {\n    /* eslint-disable */\n    return a == b\n  /* eslint-enable*/\n  }\n  math.strictlyEqual = function (a, b) {\n    return a === b\n  }\n  math.notEqual = function (a, b) {\n    /* eslint-disable */\n    return a != b\n  /* eslint-enable*/\n  }\n  math.strictlyNotEqual = function (a, b) {\n    return a !== b\n  }\n\n  // shift\n  math.shiftRight = function (a, b) {\n    return (a >> b)\n  }\n  math.shiftLeft = function (a, b) {\n    return (a << b)\n  }\n  math.unsignedRightShift = function (a, b) {\n    return (a >>> b)\n  }\n\n  // unary\n  math.negative = function (a) {\n    return -a\n  }\n  math.positive = function (a) {\n    return a\n  }\n\n  return math\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}