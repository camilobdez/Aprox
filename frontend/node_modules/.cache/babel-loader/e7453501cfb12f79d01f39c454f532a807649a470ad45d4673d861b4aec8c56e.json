{"ast":null,"code":"import { Interval } from '../interval';\nimport rmath from '../round';\nimport constants from '../constants';\nimport * as utils from './utils';\nimport * as arithmetic from './arithmetic';\n/**\n * @mixin misc\n */\n/**\n * Computes e^x where e is the mathematical constant equal to the base of the\n * natural logarithm\n *\n * @example\n * ```typescript\n * Interval.exp(\n *   Interval(-1, 1)\n * )  // Interval(0.3679, 2.7183)\n * ```\n *\n * @param {Interval} x\n * @return {Interval}\n */\nexport function exp(x) {\n  if (utils.isEmpty(x)) {\n    return constants.EMPTY;\n  }\n  return new Interval(rmath.expLo(x.lo), rmath.expHi(x.hi));\n}\n/**\n * Computes the natural logarithm of x\n *\n * @example\n * ```typescript\n * Interval.log(\n *   Interval(1, Math.exp(3))\n * )  // Interval(0, 3)\n * ```\n *\n * @param {Interval} x\n * @return {Interval}\n */\nexport function log(x) {\n  if (utils.isEmpty(x)) {\n    return constants.EMPTY;\n  }\n  const l = x.lo <= 0 ? Number.NEGATIVE_INFINITY : rmath.logLo(x.lo);\n  return new Interval(l, rmath.logHi(x.hi));\n}\n/**\n * Alias for {@link log}\n * @function\n */\nexport const ln = log;\nexport const LOG_EXP_10 = log(new Interval(10, 10));\n/**\n * Computes the logarithm base 10 of x\n *\n * @example\n * ```typescript\n * Interval.log10(\n *   Interva(1, 1000)\n * )  // Interval(0, 3)\n * ```\n *\n * @param {Interval} x\n * @return {Interval}\n */\nexport function log10(x) {\n  if (utils.isEmpty(x)) {\n    return constants.EMPTY;\n  }\n  return arithmetic.div(log(x), LOG_EXP_10);\n}\nexport const LOG_EXP_2 = log(new Interval(2, 2));\n/**\n * Computes the logarithm base 2 of x\n *\n * @example\n * ```typescript\n * Interval.log10(\n *   Interva(1, 8)\n * )  // Interval(0, 3)\n * ```\n *\n * @param {Interval} x\n * @return {Interval}\n */\nexport function log2(x) {\n  if (utils.isEmpty(x)) {\n    return constants.EMPTY;\n  }\n  return arithmetic.div(log(x), LOG_EXP_2);\n}\n/**\n * Computes an interval that has all the values of x and y, note that it may be\n * possible that values that don't belong to either x or y are included in the\n * interval that represents the hull\n *\n * @example\n * ```typescript\n * Interval.hull(\n *   Interval(-1, 1),\n *   Interval(5, 7)\n * )  // Interval(-1, 7)\n * Interval.hull(\n *   Interval(-1, 1),\n *   Interval.EMPTY\n * )  // Interval(-1, 1)\n * ```\n *\n * @param {Interval} x\n * @param {Interval} y\n * @return {Interval}\n */\nexport function hull(x, y) {\n  const badX = utils.isEmpty(x);\n  const badY = utils.isEmpty(y);\n  if (badX && badY) {\n    return constants.EMPTY;\n  } else if (badX) {\n    return y.clone();\n  } else if (badY) {\n    return x.clone();\n  } else {\n    return new Interval(Math.min(x.lo, y.lo), Math.max(x.hi, y.hi));\n  }\n}\n/**\n * Computes an interval that has all the values that belong to both x and y\n *\n * @example\n * ```typescript\n * Interval.intersection(\n *   Interval(-1, 1),\n *   Interval(0, 7)\n * )  // Interval(0, 1)\n * ```\n *\n * @param {Interval} x\n * @param {Interval} y\n * @return {Interval}\n */\nexport function intersection(x, y) {\n  if (utils.isEmpty(x) || utils.isEmpty(y)) {\n    return constants.EMPTY;\n  }\n  const lo = Math.max(x.lo, y.lo);\n  const hi = Math.min(x.hi, y.hi);\n  if (lo <= hi) {\n    return new Interval(lo, hi);\n  }\n  return constants.EMPTY;\n}\n/**\n * Computes an interval that has all the values that belong to both x and y,\n * the difference with {@link hull} is that x and y must overlap to\n * compute the union\n *\n * @example\n * ```typescript\n * Interval.union(\n *   Interval(-1, 1),\n *   Interval(5, 7)\n * )  // throws error\n * Interval.union(\n *   Interval(-1, 1),\n *   Interval(1, 7)\n * )  // Interval(-1, 7)\n * ```\n *\n * @throws {Error} When x and y don't overlap\n * @param {Interval} x\n * @param {Interval} y\n * @return {Interval}\n */\nexport function union(x, y) {\n  if (!utils.intervalsOverlap(x, y)) {\n    throw Error('Interval#union: intervals do not overlap');\n  }\n  return new Interval(Math.min(x.lo, y.lo), Math.max(x.hi, y.hi));\n}\n/**\n * Computes the difference between `x` and `y`, i.e. an interval with all the\n * values of `x` that are not in `y`\n *\n * @example\n * ```typescript\n * Interval.difference(\n *   Interval(3, 5),\n *   Interval(4, 6)\n * )  // Interval(3, prev(4))\n * Interval.difference(\n *   Interval(0, 3),\n *   Interval(0, 1)\n * )  // Interval(next(1), 3)\n * Interval.difference(\n *   Interval(0, 1),\n *   Interval.WHOLE\n * )  // Interval.EMPTY\n * Interval.difference(\n *   Interval(-Infinity, 0),\n *   Interval.WHOLE\n * )  // Interval.EMPTY\n * ```\n *\n * @throws {Error} When the difference creates multiple intervals\n * @param {Interval} x\n * @param {Interval} y\n * @return {Interval}\n */\nexport function difference(x, y) {\n  if (utils.isEmpty(x) || utils.isWhole(y)) {\n    return constants.EMPTY;\n  }\n  if (utils.intervalsOverlap(x, y)) {\n    if (x.lo < y.lo && y.hi < x.hi) {\n      // difference creates multiple subsets\n      throw Error('Interval.difference: difference creates multiple intervals');\n    }\n    // handle corner cases first\n    if (y.lo <= x.lo && y.hi === Infinity || y.hi >= x.hi && y.lo === -Infinity) {\n      return constants.EMPTY;\n    }\n    // NOTE: empty interval is handled automatically\n    // e.g.\n    //\n    //    n = difference([0,1], [0,1]) // n = Interval(next(1), 1) = EMPTY\n    //    isEmpty(n) === true\n    //\n    if (y.lo <= x.lo) {\n      return new Interval().halfOpenLeft(y.hi, x.hi);\n    }\n    // y.hi >= x.hi\n    return new Interval().halfOpenRight(x.lo, y.lo);\n  }\n  return x.clone();\n}\n/**\n * Computes the distance between the endpoints of the interval i.e. `x.hi - x.lo`\n *\n * @example\n * ```typescript\n * Interval.width(\n *   Interval(1, 2)\n * )  // 1\n * Interval.width(\n *   Interval(-1, 1)\n * )  // 2\n * Interval.width(\n *   Interval(1, 1)\n * )  // next(0) ~5e-324\n * Interval.width(\n *   Interval.EMPTY\n * )  // 0\n * ```\n *\n * @param {Interval} x\n * @returns {number}\n */\nexport function width(x) {\n  if (utils.isEmpty(x)) {\n    return 0;\n  }\n  return rmath.subHi(x.hi, x.lo);\n}\n/**\n * Alias for {@link  width}\n * @function\n */\nexport const wid = width;\n/**\n * Computes the absolute value of `x`\n *\n * @example\n * ```typescript\n * Interval.abs(\n *   Interval(2, 3)\n * )  // Interval(2, 3)\n * Interval.abs(\n *   Interval(-2, 3)\n * )  // Interval(2, 3)\n * Interval.abs(\n *   Interval(-3, -2)\n * )  // Interval(2, 3)\n * Interval.abs(\n *   Interval(-3, 2)\n * )  // Interval(0, 3)\n * ```\n *\n * @param {Interval} x\n * @return {Interval}\n */\nexport function abs(x) {\n  if (utils.isEmpty(x) || utils.isWhole(x)) {\n    return constants.EMPTY;\n  }\n  if (x.lo >= 0) {\n    return x.clone();\n  }\n  if (x.hi <= 0) {\n    return arithmetic.negative(x);\n  }\n  return new Interval(0, Math.max(-x.lo, x.hi));\n}\n/**\n * Computes an interval with the maximum values for each endpoint based on `x`\n * and `y`\n *\n * @example\n * ```typescript\n * Interval.max(\n *   Interval(0, 3),\n *   Interval(1, 2)\n * )  // Interval(1, 3)\n * ```\n *\n * @param {Interval} x\n * @param {Interval} y\n * @return {Interval}\n */\nexport function max(x, y) {\n  const badX = utils.isEmpty(x);\n  const badY = utils.isEmpty(y);\n  if (badX && badY) {\n    return constants.EMPTY;\n  } else if (badX) {\n    return y.clone();\n  } else if (badY) {\n    return x.clone();\n  } else {\n    return new Interval(Math.max(x.lo, y.lo), Math.max(x.hi, y.hi));\n  }\n}\n/**\n * Computes an interval with the minimum values for each endpoint based on `x` and `y`\n *\n * @example\n * ```typescript\n * Interval.min(\n *   Interval(0, 3),\n *   Interval(1, 2)\n * )  // Interval(0, 2)\n * ```\n *\n * @param {Interval} x\n * @param {Interval} y\n * @return {Interval}\n */\nexport function min(x, y) {\n  const badX = utils.isEmpty(x);\n  const badY = utils.isEmpty(y);\n  if (badX && badY) {\n    return constants.EMPTY;\n  } else if (badX) {\n    return y.clone();\n  } else if (badY) {\n    return x.clone();\n  } else {\n    return new Interval(Math.min(x.lo, y.lo), Math.min(x.hi, y.hi));\n  }\n}\n/**\n * Creates an interval equal to `x`, equivalent to `Interval().set(x.lo, x.hi)`\n *\n * @example\n * ```typescript\n * Interval.clone(\n *   Interval(1, 2)\n * )  // Interval(1, 2)\n * Interval.clone(\n *   Interval.EMPTY\n * )  // Interval.EMPTY\n * ```\n *\n * @param {Interval} x\n * @return {Interval}\n */\nexport function clone(x) {\n  // no bound checking\n  return new Interval().set(x.lo, x.hi);\n}","map":{"version":3,"names":["Interval","rmath","constants","utils","arithmetic","exp","x","isEmpty","EMPTY","expLo","lo","expHi","hi","log","l","Number","NEGATIVE_INFINITY","logLo","logHi","ln","LOG_EXP_10","log10","div","LOG_EXP_2","log2","hull","y","badX","badY","clone","Math","min","max","intersection","union","intervalsOverlap","Error","difference","isWhole","Infinity","halfOpenLeft","halfOpenRight","width","subHi","wid","abs","negative","set"],"sources":["../../src/operations/misc.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}