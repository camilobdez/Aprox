{"ast":null,"code":"'use strict';\n\nimport { Interval } from '../interval';\nimport rmath from '../round';\nimport constants from '../constants';\nimport * as utils from './utils';\nimport * as arithmetic from './arithmetic';\nimport * as algebra from './algebra';\nimport * as misc from './misc';\n/**\n * @mixin trigonometric\n */\n/**\n * Checks if an interval is\n * - [-Infinity, -Infinity]\n * - [Infinity, Infinity]\n * @param {Interval} x\n * @returns {boolean}\n */\nfunction onlyInfinity(x) {\n  return !isFinite(x.lo) && x.lo === x.hi;\n}\n/**\n * moves interval 2PI * k to the right until both bounds are positive\n * @param interval\n */\nfunction handleNegative(interval) {\n  if (interval.lo < 0) {\n    if (interval.lo === -Infinity) {\n      interval.lo = 0;\n      interval.hi = Infinity;\n    } else {\n      const n = Math.ceil(-interval.lo / constants.PI_TWICE_LOW);\n      interval.lo += constants.PI_TWICE_LOW * n;\n      interval.hi += constants.PI_TWICE_LOW * n;\n    }\n  }\n  return interval;\n}\n/**\n * Computes the cosine of `x`\n *\n * @example\n * ```typescript\n * Interval.cos(\n *   Interval(0, 0)\n * ) // Interval(1, 1)\n * ```\n *\n * @example\n * ```typescript\n * Interval.cos(\n *   Interval(0, Math.PI / 2)\n * ) // Interval(0, 1)\n * ```\n *\n * @example\n * ```typescript\n * Interval.cos(\n *   Interval(3 * Math.PI / 2, 3 * Math.PI)\n * ) // Interval(-1, 1)\n * ```\n *\n * @example\n * ```typescript\n * Interval.cos(\n *   Interval(-Infinity, x)\n * )\n * // Interval(-1, 1) if x > -Infinity\n * // Interval.EMPTY otherwise\n * ```\n *\n * @example\n * ```typescript\n * Interval.cos(\n *   Interval(x, Infinity)\n * )\n * // Interval(-1, 1) if x < Infinity\n * // Interval.EMPTY otherwise\n * ```\n *\n * @param {Interval} x\n * @return {Interval}\n */\nexport function cos(x) {\n  if (utils.isEmpty(x) || onlyInfinity(x)) {\n    return constants.EMPTY;\n  }\n  // create a clone of `x` because the clone is going to be modified\n  const cache = new Interval().set(x.lo, x.hi);\n  handleNegative(cache);\n  const pi2 = constants.PI_TWICE;\n  const t = algebra.fmod(cache, pi2);\n  if (misc.width(t) >= pi2.lo) {\n    return new Interval(-1, 1);\n  }\n  // when t.lo > pi it's the same as\n  // -cos(t - pi)\n  if (t.lo >= constants.PI_HIGH) {\n    const cosv = cos(arithmetic.sub(t, constants.PI));\n    return arithmetic.negative(cosv);\n  }\n  const lo = t.lo;\n  const hi = t.hi;\n  const rlo = rmath.cosLo(hi);\n  const rhi = rmath.cosHi(lo);\n  // it's ensured that t.lo < pi and that t.lo >= 0\n  if (hi <= constants.PI_LOW) {\n    // when t.hi < pi\n    // [cos(t.lo), cos(t.hi)]\n    return new Interval(rlo, rhi);\n  } else if (hi <= pi2.lo) {\n    // when t.hi < 2pi\n    // [-1, max(cos(t.lo), cos(t.hi))]\n    return new Interval(-1, Math.max(rlo, rhi));\n  } else {\n    // t.lo < pi and t.hi > 2pi\n    return new Interval(-1, 1);\n  }\n}\n/**\n * Computes the sine of `x`\n *\n * @example\n * ```typescript\n * Interval.sin(\n *   Interval(0, 0)\n * ) // Interval(0, 0)\n * ```\n *\n * @example\n * ```typescript\n * Interval.sin(\n *   Interval(0, Math.PI / 2)\n * ) // Interval(0, 1)\n * ```\n *\n * @example\n * ```typescript\n * Interval.sin(\n *   Interval(Math.PI / 2, Math.PI / 2)\n * ) // Interval(1, 1)\n * ```\n *\n * @example\n * ```typescript\n * Interval.sin(\n *   Interval(Math.PI / 2, -Math.PI / 2)\n * ) // Interval(-1, 1)\n * ```\n *\n * @example\n * ```typescript\n * Interval.sin(\n *   Interval(Math.PI, 3 * Math.PI / 2)\n * ) // Interval(-1, 0)\n * ```\n *\n * @param {Interval} x\n * @return {Interval}\n */\nexport function sin(x) {\n  if (utils.isEmpty(x) || onlyInfinity(x)) {\n    return constants.EMPTY;\n  }\n  return cos(arithmetic.sub(x, constants.PI_HALF));\n}\n/**\n * Computes the tangent of `x`\n *\n * @example\n * ```typescript\n * Interval.tan(\n *   Interval(-Math.PI / 4, Math.PI / 4)\n * ) // Interval(-1, 1)\n * ```\n *\n * @example\n * ```typescript\n * Interval.tan(\n *   Interval(0, Math.PI / 2)\n * ) // Interval.WHOLE\n * ```\n *\n * @example\n * ```typescript\n * Interval.tan(\n *   Interval(-Infinity, x)\n * )\n * // Interval.WHOLE if x > -Infinity\n * // Interval.EMPTY otherwise\n * ```\n *\n * @param {Interval} x\n * @return {Interval}\n */\nexport function tan(x) {\n  if (utils.isEmpty(x) || onlyInfinity(x)) {\n    return constants.EMPTY;\n  }\n  // create a clone of `x` because the clone is going to be modified\n  const cache = new Interval().set(x.lo, x.hi);\n  handleNegative(cache);\n  const pi = constants.PI;\n  let t = algebra.fmod(cache, pi);\n  if (t.lo >= constants.PI_HALF_LOW) {\n    t = arithmetic.sub(t, pi);\n  }\n  if (t.lo <= -constants.PI_HALF_LOW || t.hi >= constants.PI_HALF_LOW) {\n    return constants.WHOLE;\n  }\n  return new Interval(rmath.tanLo(t.lo), rmath.tanHi(t.hi));\n}\n/**\n * Computes the arcsine of `x`\n *\n * @example\n * ```typescript\n * Interval.asin(\n *   Interval(-1.57079633, 1.57079633)\n * )  // Interval(-10, 10)\n * ```\n *\n * @param {Interval} x\n * @return {Interval}\n */\nexport function asin(x) {\n  if (utils.isEmpty(x) || x.hi < -1 || x.lo > 1) {\n    return constants.EMPTY;\n  }\n  const lo = x.lo <= -1 ? -constants.PI_HALF_HIGH : rmath.asinLo(x.lo);\n  const hi = x.hi >= 1 ? constants.PI_HALF_HIGH : rmath.asinHi(x.hi);\n  return new Interval(lo, hi);\n}\n/**\n * Computes the arccosine of `x`\n *\n * @example\n * ```typescript\n * Interval.acos(\n *   Interval(0, 1)\n * )  // Interval(0, Math.PI / 2)\n * ```\n *\n * @param {Interval} x\n * @return {Interval}\n */\nexport function acos(x) {\n  if (utils.isEmpty(x) || x.hi < -1 || x.lo > 1) {\n    return constants.EMPTY;\n  }\n  const lo = x.hi >= 1 ? 0 : rmath.acosLo(x.hi);\n  const hi = x.lo <= -1 ? constants.PI_HIGH : rmath.acosHi(x.lo);\n  return new Interval(lo, hi);\n}\n/**\n * Computes the arctangent of `x`\n *\n * @example\n * ```typescript\n * Interval.atan(\n *   Interval(-1, 1)\n * )  // Interval(-0.785398163, 0.785398163)\n * ```\n *\n * @param {Interval} x\n * @return {Interval}\n */\nexport function atan(x) {\n  if (utils.isEmpty(x)) {\n    return constants.EMPTY;\n  }\n  return new Interval(rmath.atanLo(x.lo), rmath.atanHi(x.hi));\n}\n/**\n * Computes the hyperbolic sine of `x`\n *\n * @example\n * ```typescript\n * Interval.sinh(\n *   Interval(-2, 2)\n * )  // Interval(-3.6286040785, 3.6286040785)\n * ```\n *\n * @param {Interval} x\n * @return {Interval}\n */\nexport function sinh(x) {\n  if (utils.isEmpty(x)) {\n    return constants.EMPTY;\n  }\n  return new Interval(rmath.sinhLo(x.lo), rmath.sinhHi(x.hi));\n}\n/**\n * Computes the hyperbolic cosine of `x`\n *\n * @example\n * ```typescript\n * Interval.cosh(\n *   Interval(-2, 2)\n * )  // Interval(1, 3.76219569108)\n * ```\n *\n * @param {Interval} x\n * @return {Interval}\n */\nexport function cosh(x) {\n  if (utils.isEmpty(x)) {\n    return constants.EMPTY;\n  }\n  if (x.hi < 0) {\n    return new Interval(rmath.coshLo(x.hi), rmath.coshHi(x.lo));\n  } else if (x.lo >= 0) {\n    return new Interval(rmath.coshLo(x.lo), rmath.coshHi(x.hi));\n  } else {\n    return new Interval(1, rmath.coshHi(-x.lo > x.hi ? x.lo : x.hi));\n  }\n}\n/**\n * Computes the hyperbolic tangent of `x`\n *\n * @example\n * ```typescript\n * Interval.tanh(\n *   Interval(-Infinity, Infinity)\n * )  // Interval(-1, 1)\n * ```\n *\n * @param {Interval} x\n * @return {Interval}\n */\nexport function tanh(x) {\n  if (utils.isEmpty(x)) {\n    return constants.EMPTY;\n  }\n  return new Interval(rmath.tanhLo(x.lo), rmath.tanhHi(x.hi));\n}","map":{"version":3,"names":["Interval","rmath","constants","utils","arithmetic","algebra","misc","onlyInfinity","x","isFinite","lo","hi","handleNegative","interval","Infinity","n","Math","ceil","PI_TWICE_LOW","cos","isEmpty","EMPTY","cache","set","pi2","PI_TWICE","t","fmod","width","PI_HIGH","cosv","sub","PI","negative","rlo","cosLo","rhi","cosHi","PI_LOW","max","sin","PI_HALF","tan","pi","PI_HALF_LOW","WHOLE","tanLo","tanHi","asin","PI_HALF_HIGH","asinLo","asinHi","acos","acosLo","acosHi","atan","atanLo","atanHi","sinh","sinhLo","sinhHi","cosh","coshLo","coshHi","tanh","tanhLo","tanhHi"],"sources":["../../src/operations/trigonometric.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}