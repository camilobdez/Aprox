{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst d3_selection_1 = require(\"d3-selection\");\nconst evaluate_1 = __importDefault(require(\"../evaluate\"));\nconst utils_1 = __importDefault(require(\"../utils\"));\nfunction interval(chart) {\n  let minWidthHeight;\n  const xScale = chart.meta.xScale;\n  const yScale = chart.meta.yScale;\n  function clampRange(vLo, vHi, gLo, gHi) {\n    // issue 69\n    // by adding the option `invert` to both the xAxis and the `yAxis`\n    // it might be possible that after the transformation to canvas space\n    // the y limits of the rectangle get inverted i.e. gLo > gHi\n    //\n    // e.g.\n    //\n    //   functionPlot({\n    //     target: '#playground',\n    //     yAxis: { invert: true },\n    //     // ...\n    //   })\n    //\n    if (gLo > gHi) {\n      const t = gLo;\n      gLo = gHi;\n      gHi = t;\n    }\n    const hi = Math.min(vHi, gHi);\n    const lo = Math.max(vLo, gLo);\n    if (lo > hi) {\n      // no overlap\n      return [-minWidthHeight, 0];\n    }\n    return [lo, hi];\n  }\n  const line = function (points, closed) {\n    let path = '';\n    const range = yScale.range();\n    const minY = Math.min.apply(Math, range);\n    const maxY = Math.max.apply(Math, range);\n    for (let i = 0, length = points.length; i < length; i += 1) {\n      if (points[i]) {\n        const x = points[i][0];\n        const y = points[i][1];\n        let yLo = y.lo;\n        let yHi = y.hi;\n        // if options.closed is set to true then one of the bounds must be zero\n        if (closed) {\n          yLo = Math.min(yLo, 0);\n          yHi = Math.max(yHi, 0);\n        }\n        // points.scaledDX is added because of the stroke-width\n        const moveX = xScale(x.lo) + points.scaledDx / 2;\n        const viewportY = clampRange(minY, maxY, isFinite(yHi) ? yScale(yHi) : -Infinity, isFinite(yLo) ? yScale(yLo) : Infinity);\n        const vLo = viewportY[0];\n        const vHi = viewportY[1];\n        path += ' M ' + moveX + ' ' + vLo;\n        path += ' v ' + Math.max(vHi - vLo, minWidthHeight);\n      }\n    }\n    return path;\n  };\n  function plotLine(selection) {\n    selection.each(function (d) {\n      const el = plotLine.el = (0, d3_selection_1.select)(this);\n      const index = d.index;\n      const closed = d.closed;\n      const evaluatedData = (0, evaluate_1.default)(chart, d);\n      const innerSelection = el.selectAll(':scope > path.line').data(evaluatedData);\n      // the min height/width of the rects drawn by the path generator\n      minWidthHeight = Math.max(evaluatedData[0].scaledDx, 1);\n      const cls = `line line-${index}`;\n      const innerSelectionEnter = innerSelection.enter().append('path').attr('class', cls).attr('fill', 'none');\n      // enter + update\n      const selection = innerSelection.merge(innerSelectionEnter).attr('stroke-width', minWidthHeight).attr('stroke', utils_1.default.color(d, index)).attr('opacity', closed ? 0.5 : 1).attr('d', function (d) {\n        return line(d, closed);\n      });\n      if (d.attr) {\n        for (const k in d.attr) {\n          // If the attribute to modify is class then append the default class\n          // or otherwise the d3 selection won't work.\n          let val = d.attr[k];\n          if (k === 'class') {\n            val = `${cls} ${d.attr[k]}`;\n          }\n          selection.attr(k, val);\n        }\n      }\n      innerSelection.exit().remove();\n    });\n  }\n  return plotLine;\n}\nexports.default = interval;","map":{"version":3,"names":["d3_selection_1","require","evaluate_1","__importDefault","utils_1","interval","chart","minWidthHeight","xScale","meta","yScale","clampRange","vLo","vHi","gLo","gHi","t","hi","Math","min","lo","max","line","points","closed","path","range","minY","apply","maxY","i","length","x","y","yLo","yHi","moveX","scaledDx","viewportY","isFinite","Infinity","plotLine","selection","each","d","el","select","index","evaluatedData","default","innerSelection","selectAll","data","cls","innerSelectionEnter","enter","append","attr","merge","color","k","val","exit","remove","exports"],"sources":["../../src/graph-types/interval.ts"],"sourcesContent":[null],"mappings":";;;;;;;;;;AAAA,MAAAA,cAAA,GAAAC,OAAA;AAEA,MAAAC,UAAA,GAAAC,eAAA,CAAAF,OAAA;AACA,MAAAG,OAAA,GAAAD,eAAA,CAAAF,OAAA;AAKA,SAAwBI,QAAQA,CAACC,KAAY;EAC3C,IAAIC,cAAsB;EAC1B,MAAMC,MAAM,GAAGF,KAAK,CAACG,IAAI,CAACD,MAAM;EAChC,MAAME,MAAM,GAAGJ,KAAK,CAACG,IAAI,CAACC,MAAM;EAEhC,SAASC,UAAUA,CAACC,GAAW,EAAEC,GAAW,EAAEC,GAAW,EAAEC,GAAW;IACpE;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAID,GAAG,GAAGC,GAAG,EAAE;MACb,MAAMC,CAAC,GAAGF,GAAG;MACbA,GAAG,GAAGC,GAAG;MACTA,GAAG,GAAGC,CAAC;;IAET,MAAMC,EAAE,GAAGC,IAAI,CAACC,GAAG,CAACN,GAAG,EAAEE,GAAG,CAAC;IAC7B,MAAMK,EAAE,GAAGF,IAAI,CAACG,GAAG,CAACT,GAAG,EAAEE,GAAG,CAAC;IAC7B,IAAIM,EAAE,GAAGH,EAAE,EAAE;MACX;MACA,OAAO,CAAC,CAACV,cAAc,EAAE,CAAC,CAAC;;IAE7B,OAAO,CAACa,EAAE,EAAEH,EAAE,CAAC;EACjB;EAEA,MAAMK,IAAI,GAAG,SAAAA,CAAUC,MAAoB,EAAEC,MAAe;IAC1D,IAAIC,IAAI,GAAG,EAAE;IACb,MAAMC,KAAK,GAAGhB,MAAM,CAACgB,KAAK,EAAE;IAC5B,MAAMC,IAAI,GAAGT,IAAI,CAACC,GAAG,CAACS,KAAK,CAACV,IAAI,EAAEQ,KAAK,CAAC;IACxC,MAAMG,IAAI,GAAGX,IAAI,CAACG,GAAG,CAACO,KAAK,CAACV,IAAI,EAAEQ,KAAK,CAAC;IACxC,KAAK,IAAII,CAAC,GAAG,CAAC,EAAEC,MAAM,GAAGR,MAAM,CAACQ,MAAM,EAAED,CAAC,GAAGC,MAAM,EAAED,CAAC,IAAI,CAAC,EAAE;MAC1D,IAAIP,MAAM,CAACO,CAAC,CAAC,EAAE;QACb,MAAME,CAAC,GAAGT,MAAM,CAACO,CAAC,CAAC,CAAC,CAAC,CAAC;QACtB,MAAMG,CAAC,GAAGV,MAAM,CAACO,CAAC,CAAC,CAAC,CAAC,CAAC;QACtB,IAAII,GAAG,GAAGD,CAAC,CAACb,EAAE;QACd,IAAIe,GAAG,GAAGF,CAAC,CAAChB,EAAE;QACd;QACA,IAAIO,MAAM,EAAE;UACVU,GAAG,GAAGhB,IAAI,CAACC,GAAG,CAACe,GAAG,EAAE,CAAC,CAAC;UACtBC,GAAG,GAAGjB,IAAI,CAACG,GAAG,CAACc,GAAG,EAAE,CAAC,CAAC;;QAExB;QACA,MAAMC,KAAK,GAAG5B,MAAM,CAACwB,CAAC,CAACZ,EAAE,CAAC,GAAIG,MAAc,CAACc,QAAQ,GAAG,CAAC;QACzD,MAAMC,SAAS,GAAG3B,UAAU,CAC1BgB,IAAI,EACJE,IAAI,EACJU,QAAQ,CAACJ,GAAG,CAAC,GAAGzB,MAAM,CAACyB,GAAG,CAAC,GAAG,CAACK,QAAQ,EACvCD,QAAQ,CAACL,GAAG,CAAC,GAAGxB,MAAM,CAACwB,GAAG,CAAC,GAAGM,QAAQ,CACvC;QACD,MAAM5B,GAAG,GAAG0B,SAAS,CAAC,CAAC,CAAC;QACxB,MAAMzB,GAAG,GAAGyB,SAAS,CAAC,CAAC,CAAC;QACxBb,IAAI,IAAI,KAAK,GAAGW,KAAK,GAAG,GAAG,GAAGxB,GAAG;QACjCa,IAAI,IAAI,KAAK,GAAGP,IAAI,CAACG,GAAG,CAACR,GAAG,GAAGD,GAAG,EAAEL,cAAc,CAAC;;;IAGvD,OAAOkB,IAAI;EACb,CAAC;EAED,SAASgB,QAAQA,CAACC,SAAsD;IACtEA,SAAS,CAACC,IAAI,CAAC,UAAUC,CAAC;MACxB,MAAMC,EAAE,GAAKJ,QAAgB,CAACI,EAAE,GAAG,IAAA7C,cAAA,CAAA8C,MAAQ,EAAC,IAAI,CAAE;MAClD,MAAMC,KAAK,GAAGH,CAAC,CAACG,KAAK;MACrB,MAAMvB,MAAM,GAAGoB,CAAC,CAACpB,MAAM;MACvB,MAAMwB,aAAa,GAAG,IAAA9C,UAAA,CAAA+C,OAAQ,EAAC3C,KAAK,EAAEsC,CAAC,CAAC;MACxC,MAAMM,cAAc,GAAGL,EAAE,CAACM,SAAS,CAAC,oBAAoB,CAAC,CAACC,IAAI,CAACJ,aAAa,CAAC;MAE7E;MACAzC,cAAc,GAAGW,IAAI,CAACG,GAAG,CAAC2B,aAAa,CAAC,CAAC,CAAC,CAACX,QAAQ,EAAE,CAAC,CAAC;MAEvD,MAAMgB,GAAG,GAAG,aAAaN,KAAK,EAAE;MAChC,MAAMO,mBAAmB,GAAGJ,cAAc,CAACK,KAAK,EAAE,CAACC,MAAM,CAAC,MAAM,CAAC,CAACC,IAAI,CAAC,OAAO,EAAEJ,GAAG,CAAC,CAACI,IAAI,CAAC,MAAM,EAAE,MAAM,CAAC;MAEzG;MACA,MAAMf,SAAS,GAAGQ,cAAc,CAC7BQ,KAAK,CAACJ,mBAAmB,CAAC,CAC1BG,IAAI,CAAC,cAAc,EAAElD,cAAc,CAAC,CACpCkD,IAAI,CAAC,QAAQ,EAAErD,OAAA,CAAA6C,OAAK,CAACU,KAAK,CAACf,CAAC,EAAEG,KAAK,CAAQ,CAAC,CAC5CU,IAAI,CAAC,SAAS,EAAEjC,MAAM,GAAG,GAAG,GAAG,CAAC,CAAC,CACjCiC,IAAI,CAAC,GAAG,EAAE,UAAUb,CAAe;QAClC,OAAOtB,IAAI,CAACsB,CAAC,EAAEpB,MAAM,CAAC;MACxB,CAAC,CAAC;MAEJ,IAAIoB,CAAC,CAACa,IAAI,EAAE;QACV,KAAK,MAAMG,CAAC,IAAIhB,CAAC,CAACa,IAAI,EAAE;UACtB;UACA;UACA,IAAII,GAAG,GAAGjB,CAAC,CAACa,IAAI,CAACG,CAAC,CAAC;UACnB,IAAIA,CAAC,KAAK,OAAO,EAAE;YACjBC,GAAG,GAAG,GAAGR,GAAG,IAAIT,CAAC,CAACa,IAAI,CAACG,CAAC,CAAC,EAAE;;UAE7BlB,SAAS,CAACe,IAAI,CAACG,CAAC,EAAEC,GAAG,CAAC;;;MAI1BX,cAAc,CAACY,IAAI,EAAE,CAACC,MAAM,EAAE;IAChC,CAAC,CAAC;EACJ;EAEA,OAAOtB,QAAQ;AACjB;AA3GAuB,OAAA,CAAAf,OAAA,GAAA5C,QAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}