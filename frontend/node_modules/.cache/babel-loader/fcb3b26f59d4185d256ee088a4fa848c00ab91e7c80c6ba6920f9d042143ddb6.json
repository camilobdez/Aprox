{"ast":null,"code":"'use strict';\n\nmodule.exports = function (node) {\n  var self = this;\n  var arr = [];\n  this.rawify(this.options.rawArrayExpressionElements, function () {\n    arr = node.nodes.map(function (el) {\n      return self.next(el);\n    });\n  });\n  var arrString = '[' + arr.join(',') + ']';\n  if (this.options.raw) {\n    return arrString;\n  }\n  return this.options.factory + '(' + arrString + ')';\n};","map":{"version":3,"names":["module","exports","node","self","arr","rawify","options","rawArrayExpressionElements","nodes","map","el","next","arrString","join","raw","factory"],"sources":["C:/Users/camilo/Desktop/aprox/node_modules/interval-arithmetic-eval/node_modules/math-codegen/lib/node/ArrayNode.js"],"sourcesContent":["'use strict'\nmodule.exports = function (node) {\n  var self = this\n  var arr = []\n  this.rawify(this.options.rawArrayExpressionElements, function () {\n    arr = node.nodes.map(function (el) {\n      return self.next(el)\n    })\n  })\n  var arrString = '[' + arr.join(',') + ']'\n\n  if (this.options.raw) {\n    return arrString\n  }\n  return this.options.factory + '(' + arrString + ')'\n}\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,OAAO,GAAG,UAAUC,IAAI,EAAE;EAC/B,IAAIC,IAAI,GAAG,IAAI;EACf,IAAIC,GAAG,GAAG,EAAE;EACZ,IAAI,CAACC,MAAM,CAAC,IAAI,CAACC,OAAO,CAACC,0BAA0B,EAAE,YAAY;IAC/DH,GAAG,GAAGF,IAAI,CAACM,KAAK,CAACC,GAAG,CAAC,UAAUC,EAAE,EAAE;MACjC,OAAOP,IAAI,CAACQ,IAAI,CAACD,EAAE,CAAC;IACtB,CAAC,CAAC;EACJ,CAAC,CAAC;EACF,IAAIE,SAAS,GAAG,GAAG,GAAGR,GAAG,CAACS,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG;EAEzC,IAAI,IAAI,CAACP,OAAO,CAACQ,GAAG,EAAE;IACpB,OAAOF,SAAS;EAClB;EACA,OAAO,IAAI,CAACN,OAAO,CAACS,OAAO,GAAG,GAAG,GAAGH,SAAS,GAAG,GAAG;AACrD,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}