{"ast":null,"code":"'use strict';\n\nvar UnaryOperators = require('../misc/UnaryOperators');\nmodule.exports = function (node) {\n  if (this.options.raw) {\n    return node.op + this.next(node.argument);\n  }\n  if (!(node.op in UnaryOperators)) {\n    throw new SyntaxError(node.op + ' not implemented');\n  }\n  var namedOperator = UnaryOperators[node.op];\n  /* eslint-disable new-cap */\n  return this.FunctionNode({\n    name: namedOperator,\n    args: [node.argument]\n  });\n  /* eslint-enable new-cap */\n};","map":{"version":3,"names":["UnaryOperators","require","module","exports","node","options","raw","op","next","argument","SyntaxError","namedOperator","FunctionNode","name","args"],"sources":["C:/Users/camilo/Desktop/aprox/node_modules/math-codegen/lib/node/UnaryNode.js"],"sourcesContent":["'use strict'\n\nvar UnaryOperators = require('../misc/UnaryOperators')\n\nmodule.exports = function (node) {\n  if (this.options.raw) {\n    return node.op + this.next(node.argument)\n  }\n\n  if (!(node.op in UnaryOperators)) {\n    throw new SyntaxError(node.op + ' not implemented')\n  }\n\n  var namedOperator = UnaryOperators[node.op]\n  /* eslint-disable new-cap */\n  return this.FunctionNode({\n    name: namedOperator,\n    args: [node.argument]\n  })\n  /* eslint-enable new-cap */\n}\n"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,cAAc,GAAGC,OAAO,CAAC,wBAAwB,CAAC;AAEtDC,MAAM,CAACC,OAAO,GAAG,UAAUC,IAAI,EAAE;EAC/B,IAAI,IAAI,CAACC,OAAO,CAACC,GAAG,EAAE;IACpB,OAAOF,IAAI,CAACG,EAAE,GAAG,IAAI,CAACC,IAAI,CAACJ,IAAI,CAACK,QAAQ,CAAC;EAC3C;EAEA,IAAI,EAAEL,IAAI,CAACG,EAAE,IAAIP,cAAc,CAAC,EAAE;IAChC,MAAM,IAAIU,WAAW,CAACN,IAAI,CAACG,EAAE,GAAG,kBAAkB,CAAC;EACrD;EAEA,IAAII,aAAa,GAAGX,cAAc,CAACI,IAAI,CAACG,EAAE,CAAC;EAC3C;EACA,OAAO,IAAI,CAACK,YAAY,CAAC;IACvBC,IAAI,EAAEF,aAAa;IACnBG,IAAI,EAAE,CAACV,IAAI,CAACK,QAAQ;EACtB,CAAC,CAAC;EACF;AACF,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}