{"ast":null,"code":"import nextafter from 'nextafter';\n/**\n * @module interval-arithmetic/round-math\n */\nfunction identity(v) {\n  return v;\n}\nfunction prev(v) {\n  if (v === Infinity) {\n    return v;\n  }\n  return nextafter(v, -Infinity);\n}\nfunction next(v) {\n  if (v === -Infinity) {\n    return v;\n  }\n  return nextafter(v, Infinity);\n}\nfunction toInteger(x) {\n  return x < 0 ? Math.ceil(x) : Math.floor(x);\n}\nconst cache = {\n  prev: prev,\n  next: next\n};\n/**\n * @alias module:interval-arithmetic/round-math\n */\nconst round = {\n  /**\n   * Computes the previous IEEE floating point representation of `v`\n   * @example\n   * Interval.round.safePrev(1)          // 0.9999999999999999\n   * Interval.round.safePrev(3)          // 2.9999999999999996\n   * Interval.round.safePrev(Infinity)   // Infinity\n   * @param {number} v\n   * @return {number}\n   * @function\n   */\n  safePrev: prev,\n  /**\n   * Computes the next IEEE floating point representation of `v`\n   * @example\n   * Interval.round.safeNext(1)          // 1.0000000000000002\n   * Interval.round.safeNext(3)          // 3.0000000000000004\n   * Interval.round.safeNext(-Infinity)  // -Infinity\n   * @param {number} v\n   * @return {number}\n   * @function\n   */\n  safeNext: next,\n  prev(x) {\n    return cache.prev(x);\n  },\n  next(x) {\n    return cache.next(x);\n  },\n  // prettier-ignore\n  addLo(x, y) {\n    return round.prev(x + y);\n  },\n  // prettier-ignore\n  addHi(x, y) {\n    return round.next(x + y);\n  },\n  // prettier-ignore\n  subLo(x, y) {\n    return round.prev(x - y);\n  },\n  // prettier-ignore\n  subHi(x, y) {\n    return round.next(x - y);\n  },\n  // prettier-ignore\n  mulLo(x, y) {\n    return round.prev(x * y);\n  },\n  // prettier-ignore\n  mulHi(x, y) {\n    return round.next(x * y);\n  },\n  // prettier-ignore\n  divLo(x, y) {\n    return round.prev(x / y);\n  },\n  // prettier-ignore\n  divHi(x, y) {\n    return round.next(x / y);\n  },\n  // prettier-ignore\n  intLo(x) {\n    return toInteger(round.prev(x));\n  },\n  // prettier-ignore\n  intHi(x) {\n    return toInteger(round.next(x));\n  },\n  // prettier-ignore\n  logLo(x) {\n    return round.prev(Math.log(x));\n  },\n  // prettier-ignore\n  logHi(x) {\n    return round.next(Math.log(x));\n  },\n  // prettier-ignore\n  expLo(x) {\n    return round.prev(Math.exp(x));\n  },\n  // prettier-ignore\n  expHi(x) {\n    return round.next(Math.exp(x));\n  },\n  // prettier-ignore\n  sinLo(x) {\n    return round.prev(Math.sin(x));\n  },\n  // prettier-ignore\n  sinHi(x) {\n    return round.next(Math.sin(x));\n  },\n  // prettier-ignore\n  cosLo(x) {\n    return round.prev(Math.cos(x));\n  },\n  // prettier-ignore\n  cosHi(x) {\n    return round.next(Math.cos(x));\n  },\n  // prettier-ignore\n  tanLo(x) {\n    return round.prev(Math.tan(x));\n  },\n  // prettier-ignore\n  tanHi(x) {\n    return round.next(Math.tan(x));\n  },\n  // prettier-ignore\n  asinLo(x) {\n    return round.prev(Math.asin(x));\n  },\n  // prettier-ignore\n  asinHi(x) {\n    return round.next(Math.asin(x));\n  },\n  // prettier-ignore\n  acosLo(x) {\n    return round.prev(Math.acos(x));\n  },\n  // prettier-ignore\n  acosHi(x) {\n    return round.next(Math.acos(x));\n  },\n  // prettier-ignore\n  atanLo(x) {\n    return round.prev(Math.atan(x));\n  },\n  // prettier-ignore\n  atanHi(x) {\n    return round.next(Math.atan(x));\n  },\n  // polyfill required for hyperbolic functions\n  // prettier-ignore\n  sinhLo(x) {\n    return round.prev(Math.sinh(x));\n  },\n  // prettier-ignore\n  sinhHi(x) {\n    return round.next(Math.sinh(x));\n  },\n  // prettier-ignore\n  coshLo(x) {\n    return round.prev(Math.cosh(x));\n  },\n  // prettier-ignore\n  coshHi(x) {\n    return round.next(Math.cosh(x));\n  },\n  // prettier-ignore\n  tanhLo(x) {\n    return round.prev(Math.tanh(x));\n  },\n  // prettier-ignore\n  tanhHi(x) {\n    return round.next(Math.tanh(x));\n  },\n  /**\n   * @ignore\n   * ln(power) exponentiation of x\n   * @param {number} x\n   * @param {number} power\n   * @returns {number}\n   */\n  powLo(x, power) {\n    if (power % 1 !== 0) {\n      // power has decimals\n      return round.prev(Math.pow(x, power));\n    }\n    let y = (power & 1) === 1 ? x : 1;\n    power >>= 1;\n    while (power > 0) {\n      x = round.mulLo(x, x);\n      if ((power & 1) === 1) {\n        y = round.mulLo(x, y);\n      }\n      power >>= 1;\n    }\n    return y;\n  },\n  /**\n   * @ignore\n   * ln(power) exponentiation of x\n   * @param {number} x\n   * @param {number} power\n   * @returns {number}\n   */\n  powHi(x, power) {\n    if (power % 1 !== 0) {\n      // power has decimals\n      return round.next(Math.pow(x, power));\n    }\n    let y = (power & 1) === 1 ? x : 1;\n    power >>= 1;\n    while (power > 0) {\n      x = round.mulHi(x, x);\n      if ((power & 1) === 1) {\n        y = round.mulHi(x, y);\n      }\n      power >>= 1;\n    }\n    return y;\n  },\n  // prettier-ignore\n  sqrtLo(x) {\n    return round.prev(Math.sqrt(x));\n  },\n  // prettier-ignore\n  sqrtHi(x) {\n    return round.next(Math.sqrt(x));\n  },\n  /**\n   * Most operations on intervals will cary the rounding error so that the\n   * resulting interval correctly represents all the possible values, this feature\n   * can be disabled by calling this method allowing a little boost in the\n   * performance while operating on intervals\n   *\n   * @see module:interval-arithmetic/round-math.enable\n   * @example\n   * var x = Interval.add(\n   *   Interval(1),\n   *   Interval(1)\n   * )\n   * x // equal to {lo: 1.9999999999999998, hi: 2.0000000000000004}\n   *\n   * Interval.round.disable()\n   * var y = Interval.add(\n   *   Interval(1),\n   *   Interval(1)\n   * )\n   * y // equal to {lo: 2, hi: 2}\n   * @function\n   */\n  disable() {\n    cache.next = cache.prev = identity;\n  },\n  /**\n   * Enables IEEE previous/next floating point wrapping of values (enabled by\n   * default)\n   * @see module:interval-arithmetic/round-math.disable\n   * @example\n   * var x = Interval.add(\n   *   Interval(1),\n   *   Interval(1)\n   * )\n   * x // equal to {lo: 1.9999999999999998, hi: 2.0000000000000004}\n   *\n   * Interval.round.disable()\n   * var y = Interval.add(\n   *   Interval(1),\n   *   Interval(1)\n   * )\n   * y // equal to {lo: 2, hi: 2}\n   *\n   * Interval.round.enable()\n   * var z = Interval.add(\n   *   Interval(1),\n   *   Interval(1)\n   * )\n   * z // equal to {lo: 1.9999999999999998, hi: 2.0000000000000004}\n   * @function\n   */\n  enable() {\n    cache.next = next;\n    cache.prev = prev;\n  }\n};\nexport default round;","map":{"version":3,"names":["nextafter","identity","v","prev","Infinity","next","toInteger","x","Math","ceil","floor","cache","round","safePrev","safeNext","addLo","y","addHi","subLo","subHi","mulLo","mulHi","divLo","divHi","intLo","intHi","logLo","log","logHi","expLo","exp","expHi","sinLo","sin","sinHi","cosLo","cos","cosHi","tanLo","tan","tanHi","asinLo","asin","asinHi","acosLo","acos","acosHi","atanLo","atan","atanHi","sinhLo","sinh","sinhHi","coshLo","cosh","coshHi","tanhLo","tanh","tanhHi","powLo","power","pow","powHi","sqrtLo","sqrt","sqrtHi","disable","enable"],"sources":["../src/round.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}